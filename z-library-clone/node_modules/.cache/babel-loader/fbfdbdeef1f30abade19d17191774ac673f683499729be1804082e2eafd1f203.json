{"ast":null,"code":"var _jsxFileName = \"/home/zahra/Desktop/z-library-clone/src/pages/BooksPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useQuery() {\n  _s();\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\nconst BooksPage = () => {\n  _s2();\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const query = useQuery(); // Use the custom hook to parse query parameters\n  const categoryName = query.get('category'); // Assume the parameter is named 'category'\n\n  useEffect(() => {\n    if (!categoryName) {\n      setIsLoading(false);\n      setError('No category specified');\n      return;\n    }\n    setIsLoading(true);\n    fetch(`http://127.0.0.1:5000/api/images?category=${encodeURIComponent(categoryName)}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`Network response was not ok, status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setBooks(data); // Assuming the API returns an array of books/images\n      setIsLoading(false);\n    }).catch(err => {\n      console.error('Error fetching books:', err);\n      setError(err.message);\n      setIsLoading(false);\n    });\n  }, [categoryName]); // Dependency on categoryName\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Books in Category: \", categoryName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map((book, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [book.title || 'Untitled', \" - \", book.author || 'Unknown Author']\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) // Assuming 'title' and 'author' fields exist\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s2(BooksPage, \"8F0fMDi4JxreFuMopoEXPtMx0EQ=\", false, function () {\n  return [useQuery];\n});\n_c = BooksPage;\nexport default BooksPage;\nvar _c;\n$RefreshReg$(_c, \"BooksPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","useQuery","_s","URLSearchParams","search","BooksPage","_s2","books","setBooks","isLoading","setIsLoading","error","setError","query","categoryName","get","fetch","encodeURIComponent","then","response","ok","Error","status","json","data","catch","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","book","index","title","author","_c","$RefreshReg$"],"sources":["/home/zahra/Desktop/z-library-clone/src/pages/BooksPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // Import useLocation\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst BooksPage = () => {\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const query = useQuery(); // Use the custom hook to parse query parameters\n  const categoryName = query.get('category'); // Assume the parameter is named 'category'\n\n  useEffect(() => {\n    if (!categoryName) {\n      setIsLoading(false);\n      setError('No category specified');\n      return;\n    }\n\n    setIsLoading(true);\n    fetch(`http://127.0.0.1:5000/api/images?category=${encodeURIComponent(categoryName)}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`Network response was not ok, status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        setBooks(data); // Assuming the API returns an array of books/images\n        setIsLoading(false);\n      })\n      .catch(err => {\n        console.error('Error fetching books:', err);\n        setError(err.message);\n        setIsLoading(false);\n      });\n  }, [categoryName]); // Dependency on categoryName\n\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      <h1>Books in Category: {categoryName}</h1>\n      <ul>\n        {books.map((book, index) => (\n          <li key={index}>{book.title || 'Untitled'} - {book.author || 'Unknown Author'}</li> // Assuming 'title' and 'author' fields exist\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BooksPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}